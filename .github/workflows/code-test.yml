name: Code Testing

on:
  pull_request:
    branches: [ develop ]

jobs:
  unit-testing:
    name: Unit Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup PHP with PECL extension 🔧
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
          extensions: imagick

      - name: Install 🔧
        run: |
          composer validate
          composer install --prefer-dist --no-progress --no-suggest

      - name: Unit Test 🤞
        run: composer unit-test

      - name: Upload Coverage 📊
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: ut-coverage
          path: reports

  integration-testing:
    name: Integration Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Setup PHP with PECL extension 🔧
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
          extensions: imagick

      - name: Install 🔧
        run: |
          composer validate
          composer install --prefer-dist --no-progress --no-suggest
          sudo pear channel-update pear.php.net
#          pear install Mail Mail_Mime

      - name: Set up env file
        run: |
          echo '# tool hosting information' > .env
          echo 'ADMIN_PORT=9090' >> .env
          echo 'HTTP_PORT=90' >> .env
          echo 'HTTPS_PORT=9443' >> .env
          echo 'SERVER_NAME=victor' >> .env
          echo '' >> .env
          echo '# database information' >> .env
          echo 'DB_ROOT=${{ secrets.DB_ROOT }}' >> .env
          echo 'DB_PORT=3406' >> .env
          echo 'DB_NAME=saperstone-studios' >> .env
          echo 'DB_USER=${{ secrets.DB_USER }}' >> .env
          echo 'DB_PASS=${{ secrets.DB_PASS }}' >> .env
          echo '' >> .env
          echo '# email information' >> .env
          echo 'EMAIL_CONTACT=msaperst+sstest@gmail.com' >> .env
          echo 'EMAIL_ACTIONS=msaperst+sstest@gmail.com' >> .env
          echo 'EMAIL_SELECTS=msaperst+sstest@gmail.com' >> .env
          echo 'EMAIL_CONTRACTS=msaperst+sstest@gmail.com' >> .env
          echo 'EMAIL_HOST=ssl://smtp.gmail.com' >> .env
          echo 'EMAIL_PORT=465' >> .env
          echo 'EMAIL_USER=${{ secrets.EMAIL_USER }}' >> .env
          echo 'EMAIL_PASS=${{ secrets.EMAIL_PASS }}' >> .env
          echo 'EMAIL_USER_X=${{ secrets.EMAIL_USER_X }}' >> .env
          echo 'EMAIL_PASS_X=${{ secrets.EMAIL_PASS_X }}' >> .env
          echo '' >> .env
          echo '# twitter information' >> .env
          echo 'CONSUMER_KEY=${{ secrets.CONSUMER_KEY }}' >> .env
          echo 'CONSUMER_SECRET=${{ secrets.CONSUMER_SECRET }}' >> .env
          echo 'TOKEN=${{ secrets.TOKEN }}' >> .env
          echo 'TOKEN_SECRET=${{ secrets.TOKEN_SECRET }}' >> .env
          echo '' >> .env
          echo '# paypal information' >> .env
          echo 'PAYPAL_USERNAME=${{ secrets.PAYPAL_USERNAME }}' >> .env
          echo 'PAYPAL_PASSWORD=${{ secrets.PAYPAL_PASSWORD }}' >> .env
          echo 'PAYPAL_SIGNATURE=${{ secrets.PAYPAL_SIGNATURE }}' >> .env

      - name: Set up Gmail Credentials
        run: echo '${{ secrets.GMAIL_TEST_CREDENTIALS }}' > credentials.json

      - name: Set up Gmail Token
        run: echo '${{ secrets.GMAIL_TEST_TOKEN }}' > token.json

      - name: Integration Test 🤞
        run: |
          sudo mkdir -p /var/www/logs
          sudo chmod 777 /var/www
          sudo chmod 777 /var/www/logs
          composer integration-pre-test
          composer integration-test

      - name: Upload Coverage 📊
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: it-coverage
          path: reports

  sonar:
    name: SonarCloud
    needs: [unit-testing, integration-testing]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 🛎️
        uses: actions/checkout@v3

      - name: Get UT Coverage
        uses: actions/download-artifact@v3
        with:
          name: ut-coverage
          path: ut

      - name: Get IT Coverage
        uses: actions/download-artifact@v3
        with:
          name: it-coverage
          path: it/

      - name: Combine Reports
        run: mkdir reports; mv ut/* reports/; mv it/* reports/

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
